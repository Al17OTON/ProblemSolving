class Solution {
    // 5의 n승의 길이를 가진다.
    // 11011에서 0만 찾아서 갯수를 빼주면 된다?
    // 자신의 깊이와 순서를 알면 자신의 범위를 알아낼 수 있다
    // 깊이가 2일때 11번째 숫자는 다음 깊이(3)에서 (10 * 5) + 1 ~ (11 * 5) 까지의 범위를 가진다.
    // (4)에서는 (10 * 5 * 5) + 1 ~ (11 * 5 * 5)의 범위를 가진다?
    // 구간합?
    
    // 주어진 l r을 가지는 노드에 접근해서 정확한 비트 갯수를 구하고
    // 그 외의 범위는 제외하는 식?

    public int solution(int n, long l, long r) {
        int answer = 0;
        
        for(l -= 1; l < r; ++l) {
            if(isBit(l)) ++answer;
        }
        
        return answer;
    }
    
    boolean isBit(long pos) {
        if(pos < 5 && pos != 2) return true;
        if((pos - 2) % 5 == 0) return false;
        
        return isBit(pos / 5);
    }
}

/*
1
11011
11011 11011 00000 11011 11011
1101111011000001101111011 1101111011000001101111011 0000000000000000000000000 1101111011000001101111011 1101111011000001101111011
9 9 25 9 9 
61 61 125 61 61
*/